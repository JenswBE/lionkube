kind: Service
apiVersion: v1
metadata:
  namespace: nextcloud
  name: nextcloud
  labels:
    app: nextcloud
spec:
  selector:
    app: nextcloud
  ports:
    - port: 80

---

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  namespace: nextcloud
  name: filter-ingress-on-nextcloud
spec:
  podSelector:
    matchLabels:
      app: nextcloud
  policyTypes:
  - Ingress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: traefik
      podSelector:
        matchLabels:
          app: traefik

    ports:
    - protocol: TCP
      port: 80

---

apiVersion: v1
kind: ConfigMap
metadata:
  namespace: nextcloud
  name: nextcloud-crontab
data:
  crontab: |
    # Min Hour DoM Month DoW Command
    */5   *    *   *     *   php -f /var/www/html/cron.php
    */10  *    *   *     *   php -f /var/www/html/occ preview:pre-generate
    0     1    *   *     *   php -f /var/www/html/occ trashbin:expire
    30    4    *   *     *   php -f /var/www/html/occ app:update --all

---

apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: nextcloud
  name: nextcloud
  labels:
    app: nextcloud
spec:
  selector:
    matchLabels:
      app: nextcloud
  template:
    metadata:
      labels:
        app: nextcloud
    spec:
      containers:
        - name: nextcloud
          image: nextcloud:latest
          env:
            - name: TZ
              value: ${TIMEZONE}
            - name: MYSQL_DATABASE
              value: "nextcloud"
            - name: MYSQL_USER
              value: "nextcloud"
            - name: MYSQL_HOST
              value: "mariadb"
          envFrom:
            - secretRef:
                name: mariadb-user-nextcloud
          volumeMounts:
            - name: config
              mountPath: /var/www/html
            - name: data
              mountPath: /var/www/html/data
          ports:
            - name: http
              containerPort: 80

        - name: cron
          image: nextcloud:latest
          env:
            - name: TZ
              value: ${TIMEZONE}
          command: ['/cron.sh']
          volumeMounts:
            - name: config
              mountPath: /var/www/html
            - name: data
              mountPath: /var/www/html/data
            - name: crontab
              mountPath: /var/spool/cron/crontabs

        - name: backup-calcard
          image: waja/calcardbackup
          env:
            - name: TZ
              value: ${TIMEZONE}
            - name: CRON_TIME
              value: "5 2 * * *"
            - name: CALCARD_OPTS
              value: "-i -x -d '_overwrite'"
          volumeMounts:
            - name: config
              mountPath: /nextcloud
              readOnly: true
            - name: backup-calcard
              mountPath: /backup

      nodeSelector:
        mount.media.nextcloud.data: "true"

      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: nextcloud-config
        - name: data
          hostPath:
            path: /media/nextcloud/data
            type: DirectoryOrCreate
        - name: backup-calcard
          hostPath:
            path: /media/nextcloud/backup/calcard
            type: DirectoryOrCreate
        - name: crontab
          configMap:
            name: nextcloud-crontab
            items:
              - key: crontab
                path: www-data
